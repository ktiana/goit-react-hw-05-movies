{"version":3,"file":"static/js/186.f5108233.chunk.js","mappings":"8JAOA,UAPiB,WACf,OACE,0BACE,0CAGL,C,oICsDD,UAnDgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,IAAU,IAAtBD,QAyBR,OAvBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAW,mCAAG,2FAClBJ,EAAS,IADS,mBAIGK,EAAAA,EAAAA,IAAWJ,GAJd,OAIVK,EAJU,OAKhBV,EAAWU,GALK,gDAOhBN,EAAS,wBAPO,yBAShBF,GAAa,GATG,4EAAH,qDAajBM,GAdoB,CAerB,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACHJ,GACLQ,EAAAA,GAAAA,MAAYR,EACb,GAAE,CAACA,KAGF,gCACGF,IAAa,SAAC,IAAD,CAAYW,MAAM,UAAUC,KAAM,OACxC,OAAPd,QAAO,IAAPA,OAAA,EAAAA,EAASe,QAAS,GACjB,wBACGf,EAAQgB,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,GAC3C,OACE,2BACE,uBAAIH,KACJ,uBAAIC,IACHC,IAHMC,EAMZ,OAGH,SAAC,UAAD,MAIP,C,+LCxDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,sGACPF,EAAAA,EAAAA,IAAU,wBADH,uBACtBV,EADsB,EACtBA,KADsB,kBAEvBA,EAAKa,SAFkB,2CAAH,qDAKhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,8BAAiCK,IAD5B,uBACpBf,EADoB,EACpBA,KADoB,kBAErBA,EAAKa,SAFgB,2CAAH,sDAKdG,EAAa,mCAAG,WAAMP,GAAN,yFACJC,EAAAA,EAAAA,IAAA,iBAAoBD,IADhB,uBACnBT,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbiB,EAAO,mCAAG,WAAMR,GAAN,yFACEC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,aADF,uBACbT,EADa,EACbA,KADa,kBAEdA,EAAKkB,MAFS,2CAAH,sDAKPnB,EAAU,mCAAG,WAAMU,GAAN,yFACDC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,aADC,uBAChBT,EADgB,EAChBA,KADgB,kBAEjBA,EAAKa,SAFY,2CAAH,qD","sources":["components/NotFound/NotFound.jsx","components/Reviews/Reviews.jsx","components/services/api.js"],"sourcesContent":["const NotFound = () => {\n  return (\n    <div>\n      <p>404 not found</p>\n    </div>\n  );\n};\nexport default NotFound;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { PuffLoader } from 'react-spinners';\nimport { toast } from 'react-toastify';\n\nimport { getReviews } from 'components/services/api';\nimport NotFound from 'components/NotFound/NotFound';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const { movieId } = useParams('');\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovies = async () => {\n      setError('');\n\n      try {\n        const data = await getReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        setError('something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <>\n      {isLoading && <PuffLoader color=\"#36d7b7\" size={200} />}\n      {reviews?.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, created_at, id }) => {\n            return (\n              <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n                {created_at}\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <NotFound />\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2db21389930b520d8ed134be7fb3bbe4',\n};\n\nexport const getInitialMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data.results;\n};\n\nexport const getQueryMovies = async movie => {\n  const { data } = await axios.get(`/search/movie?query=${movie}`);\n  return data.results;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchMovies","getReviews","data","toast","color","size","length","map","author","content","created_at","id","axios","api_key","getInitialMovies","results","getQueryMovies","movie","getMoviesById","getCast","cast"],"sourceRoot":""}