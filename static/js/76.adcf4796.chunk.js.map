{"version":3,"file":"static/js/76.adcf4796.chunk.js","mappings":"sQACA,EAAyB,qBAAzB,EAA2D,yBAA3D,EAAkG,0BAAlG,EAAoI,oBAApI,EAAqK,yB,kBCsErK,EA7Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,IAAU,IAAtBD,QAyBR,OAvBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAW,mCAAG,2FAClBJ,EAAS,IADS,mBAIGK,EAAAA,EAAAA,IAAQJ,GAJX,OAIVK,EAJU,OAKhBV,EAAQU,GALQ,gDAOhBN,EAAS,wBAPO,yBAShBF,GAAa,GATG,4EAAH,qDAajBM,GAdoB,CAerB,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACHJ,GACLQ,EAAAA,GAAAA,MAAYR,EACb,GAAE,CAACA,KAGF,gCACGF,IAAa,SAACW,EAAA,EAAD,CAAYC,MAAM,UAAUC,KAAM,OAC3C,OAAJf,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,QAAS,IACd,eAAIC,UAAWC,EAAf,SACGlB,EAAKmB,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,cAAeC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GACnD,OACE,gBAAaN,UAAWC,EAAxB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACEM,IACEF,EAAY,yCAC0BA,GAClCG,EAENC,IAAKN,EACLH,UAAWC,OAGf,iBAAKD,UAAWC,EAAhB,WACE,uBAAIG,KACJ,uBAAID,SAdCG,EAkBZ,QAKV,C,+LCnEDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,sGACPF,EAAAA,EAAAA,IAAU,wBADH,uBACtBhB,EADsB,EACtBA,KADsB,kBAEvBA,EAAKmB,SAFkB,2CAAH,qDAKhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,8BAAiCK,IAD5B,uBACpBrB,EADoB,EACpBA,KADoB,kBAErBA,EAAKmB,SAFgB,2CAAH,sDAKdG,EAAa,mCAAG,WAAMV,GAAN,yFACJI,EAAAA,EAAAA,IAAA,iBAAoBJ,IADhB,uBACnBZ,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbD,EAAO,mCAAG,WAAMa,GAAN,yFACEI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,aADF,uBACbZ,EADa,EACbA,KADa,kBAEdA,EAAKX,MAFS,2CAAH,sDAKPkC,EAAU,mCAAG,WAAMX,GAAN,yFACDI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,aADC,uBAChBZ,EADgB,EAChBA,KADgB,kBAEjBA,EAAKmB,SAFY,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actors\":\"Cast_actors__lJ2iJ\",\"actor_card\":\"Cast_actor_card__ACyZC\",\"actor_photo\":\"Cast_actor_photo__kxcfs\",\"photo\":\"Cast_photo__lvFLf\",\"actor_text\":\"Cast_actor_text__Zf3M2\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { PuffLoader } from 'react-spinners';\nimport { toast } from 'react-toastify';\nimport dumbImage from '../assets/images/no-image-icon-23505.png';\nimport css from './Cast.module.css';\n\nimport { getCast } from 'components/services/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const { movieId } = useParams('');\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovies = async () => {\n      setError('');\n\n      try {\n        const data = await getCast(movieId);\n        setCast(data);\n      } catch (error) {\n        setError('something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <>\n      {isLoading && <PuffLoader color=\"#36d7b7\" size={200} />}\n      {cast?.length > 0 && (\n        <ul className={css.actors}>\n          {cast.map(({ original_name, character, profile_path, id }) => {\n            return (\n              <li key={id} className={css.actor_card}>\n                <div className={css.actor_photo}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                        : dumbImage\n                    }\n                    alt={original_name}\n                    className={css.photo}\n                  />\n                </div>\n                <div className={css.actor_text}>\n                  <p>{character}</p>\n                  <p>{original_name}</p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2db21389930b520d8ed134be7fb3bbe4',\n};\n\nexport const getInitialMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data.results;\n};\n\nexport const getQueryMovies = async movie => {\n  const { data } = await axios.get(`/search/movie?query=${movie}`);\n  return data.results;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchMovies","getCast","data","toast","PuffLoader","color","size","length","className","css","map","original_name","character","profile_path","id","src","dumbImage","alt","axios","api_key","getInitialMovies","results","getQueryMovies","movie","getMoviesById","getReviews"],"sourceRoot":""}