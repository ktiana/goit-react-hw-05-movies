{"version":3,"file":"static/js/309.b26a9676.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Pages/MovieCard/MovieCard.module.css?ca3f","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","Pages/MovieCard/MovieCard.jsx","components/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieCard_backLink__LlA-2\"};","// extracted by mini-css-extract-plugin\nexport default {\"filmWrap\":\"MovieDetails_filmWrap__Nu5T4\",\"filmImg\":\"MovieDetails_filmImg__5d4fI\",\"filmInfo\":\"MovieDetails_filmInfo__EShZE\",\"title\":\"MovieDetails_title__RBndM\",\"text\":\"MovieDetails_text__uG5Tv\",\"link\":\"MovieDetails_link__wf74g\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = ({ movieData }) => {\n  const location = useLocation();\n\n  const backLink = location?.state?.from ?? '/';\n\n  const {\n    original_title,\n    poster_path,\n    tagline,\n    budget,\n    genres,\n    production_companies,\n    release_date,\n    overview,\n  } = movieData;\n  return (\n    <div className={css.filmWrap}>\n      <img\n        src={'https://image.tmdb.org/t/p/w500' + poster_path}\n        alt={original_title}\n        className={css.filmImg}\n      />\n      <div className={css.filmInfo}>\n        <h3 className={css.title}>{original_title}</h3>\n        <p className={css.text}>\n          <b>Tagline: </b>\n          {tagline}\n        </p>\n        <p className={css.text}>\n          <b>Budget: </b>\n          {budget}$\n        </p>\n        <p className={css.text}>\n          <b>Genres: </b>\n          {Array.isArray(genres) && genres.map(genre => genre.name).join(', ')}\n        </p>\n        <p className={css.text}>\n          <b>Production companies: </b>\n          {Array.isArray(production_companies) &&\n            production_companies.map(company => company.name).join(', ')}\n        </p>\n        <p className={css.text}>\n          <b>Release date : </b>\n          {release_date}\n        </p>\n        <p className={css.text}>\n          <b>Description: </b>\n          {overview}\n        </p>\n        <Link to=\"cast\" state={{ from: backLink }} className={css.link}>\n          Cast\n        </Link>\n        <Link to=\"reviews\" state={{ from: backLink }} className={css.link}>\n          Reviews\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { PuffLoader } from 'react-spinners';\nimport { toast } from 'react-toastify';\nimport css from './MovieCard.module.css';\n\nimport { getMoviesById } from 'components/services/api';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\n\nconst MovieCard = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const { movieId } = useParams('');\n  const location = useLocation();\n\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovies = async () => {\n      setError('');\n\n      try {\n        const data = await getMoviesById(movieId);\n        setMovieData(data);\n      } catch (error) {\n        setError('something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <>\n      <h1\n        style={{\n          margin: '0',\n          textAlign: 'center',\n          paddingTop: '10px',\n          paddingBottom: '10px',\n        }}\n      >\n        MOVIE DETAILS\n      </h1>\n      <Link to={backLink} className={css.backLink}>\n        Go back\n      </Link>\n      {isLoading && <PuffLoader color=\"#36d7b7\" size={200} />}\n      {movieData && <MovieDetails movieData={movieData} />}\n      <div>\n        <Suspense fallback={<PuffLoader color=\"#36d7b7\" size={200} />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieCard;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2db21389930b520d8ed134be7fb3bbe4',\n};\n\nexport const getInitialMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data.results;\n};\n\nexport const getQueryMovies = async movie => {\n  const { data } = await axios.get(`/search/movie?query=${movie}`);\n  return data.results;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["movieData","location","useLocation","backLink","state","from","original_title","poster_path","tagline","budget","genres","production_companies","release_date","overview","className","css","src","alt","Array","isArray","map","genre","name","join","company","to","useState","setMovieData","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchMovies","getMoviesById","data","toast","style","margin","textAlign","paddingTop","paddingBottom","PuffLoader","color","size","Suspense","fallback","axios","api_key","getInitialMovies","results","getQueryMovies","movie","id","getCast","cast","getReviews"],"sourceRoot":""}